function canmeng()
Menu = gg.choice({
'💋一键MX加密💋',
'💋 一键X加密💋',
'💋一键YIC①加密💋',
'💋一键YIC②加密💋',
'💋一键DZSH加密💋',
'💋一键DZSH五次加密💋',
'💋一键Enc加密💋',
'💋一键Lua+加密💋',
'💋一键数字加密💋',
'💋一键原创B加密💋',
'💋一键nanzhi加密💋',
'退出程序'},nil,'\n请把脚本放到tencent/QQfile_recv/的文件夹里面并且改名为1.lua<加密成功不会提示，请自行刷新文件夹即可看到加密完成脚本>')
if Menu == 1 then HZJIA() end
if Menu == 2 then b() end
if Menu == 3 then c() end
if Menu == 4 then d() end
if Menu == 5 then e() end
if Menu == 6 then f() end
if Menu == 7 then g() end
if Menu == 8 then h() end
if Menu == 9 then i() end
if Menu == 10 then j() end
if Menu == 11 then k() end
if Menu == 12 then print('退出'..sj)os.exit() end
PD1 = 0
end

function getByte(data, flag)
    local array = {}
    local lens = string.len(data)
    if (flag == false)
    then
        for i=1,lens do
            array[i] = string.byte(data, i)
        end
        return array
    else
        for i=1,lens do
            array[i-1] = string.byte(data, i)
        end
    end
    return array,lens
end

function getChars(bytes)
    local array = {}
    for key, val in pairs(bytes) do
        array[key] = string.char(val)
    end
    return array
end

function string.split( str,reps )
    local resultStrList = {}
    string.gsub(str,'[^'..reps..']+',function ( w )
        table.insert(resultStrList,w)
    end)
    return resultStrList
end

function HZJIA()
Path = gg.prompt({[1]='选择要加密的脚本 来自CM加密的提示'}, {[1]='/storage/emulated/0/CM加密/'},{[1]='file'})
if Path==nil then
DZSH() 
else
HZJIA2()
end
end
function HZJIA2()
local file = io.open(Path[1], 'r')
assert(file)
local key = gg.prompt({[1]='请输入加密密码 来着CM加密的提示'}, {[1]=''}, {[1]='text'})

function encryptData(data, keys)
    local result = ''
    local dataArr = getByte(data, false)
    local keyArr,keyLen = getByte(keys, true)
    for index,value in pairs(dataArr) do
        result = result..'B'..tostring((0xFF and value) + (0xFF and keyArr[(index-1) % keyLen]))
    end
jmdm = result
decryption = "--CM加密\n--\n--QQ：52831274\n--© 20182019 canmeng.\n\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nLJ=gg.getFile()\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfile = io.open(LJ, 'r')assert(file)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfunction DZSH(data2)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfunctionfunc,...) pcall(func,...) end\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\na=string.find(data2, 'p'..'r'..'i'..'n'..'t'..'('..'d'..'z'..'s'..'h'..')')\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nif a == nil then\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfunction getByte(data, flag)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nlocal array = {}\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nlocal lens = string.len(data)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nif (flag == false) then\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfor i=1,lens do\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\narray[i] = string.byte(data, i)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nreturn array \n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nelse\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfor i=1,lens do\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\narray[i-1] = string.byte(data, i)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nreturn array,lens \n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfunction getChars(bytes)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nlocal array = {}\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfor key, val in pairs(bytes) do\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\narray[key] = string.char(val) end\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nreturn array\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfunction string.split( str,reps )\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nlocal resultStrList = {} string.gsub(str,'[^'..reps..']+',function ( w )  table.insert(resultStrList,w)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nreturn resultStrList\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfunction decryptData(data, keys)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nlocal result = ''\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nlocal dataArr = string.split(data, 'B')\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nlocal keyArr,keyLen = getByte(keys, true)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfor index,value in pairs(dataArr) do\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nbytes =  tonumber(value) - (0xFF and keyArr[(index-1) % keyLen])\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nresult = result..string.char(bytes)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nlocal dzsh = load(result)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\dzsh)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nlocal data = 'JMDM'\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nlocal key = gg.prompt({[1]='请输入脚本密码 来着CM加密的提示'}, {[1]=''}, {[1]='text'})\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\ndecryptData(data, key[1])\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nelse\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nos.remove(LJ)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nos.remove(LJ..'.bak')\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfile = io.open(LJ, 'w')\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfile:write('')\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfile:close()\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\ngg.alert('CM加密提示 解密失败')\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfunction byCM(func,...) print(func,...) end\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nos.exit()\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\ndata2 = file:read('*a')\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfile:close()\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nDZSH(data2)\n\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n--CM加密"

wzdm = string.gsub(decryption, 'JMDM', jmdm)
file = io.open(Path[1]..'CM', 'w')
file:write(wzdm)
file:close()
gg.alert('CM加密成功\n'..Path[1]..'CM'..sj)
end
local data = file:read('*a')file:close()
encryptData(data, key[1])
end

function b()
Path = gg.prompt({[1]="选择要加密的脚本"}, {[1]="/storage/emulated/0/tencent/QQfile_recv/"},{[1]="file"})

if Path==nil then
os.exit() 
end

local function Encryption(Wen)
  return Wen:gsub(".", function(boom)
    return string.format("%02X", (string.byte(boom)) % 999)
  end):gsub(" ", "+")
end

local file = io.open(Path[1], "r")
assert(file)
local data = file:read("*a")
file:close()

CMJM = Encryption(data)
decryption = "function Decryption(xoom,Wen)\n\n  return (Wen:gsub('..', function (xoom)\n\n    return string.char((tonumber(xoom,16))%999)\n\n  end))\n\nend\n\nlocal data = Decryption('BxJM','CMJM')\n\nlocal BxJM = load(data)\n\npcall(BxJM)\n"
wzdm = string.gsub(decryption, "CMJM", CMJM)
file = io.open(Path[1].."x", "w")
file:write(wzdm)
file:close()

for i=1,3 do
local function Encryption(Wen)
  return Wen:gsub(".", function(boom)
    return string.format("%02X", (string.byte(boom)) % 999)
  end):gsub(" ", "+")
end

local file = io.open(Path[1]..'x', "r")
assert(file)
local data = file:read("*a")
file:close()

CMJM = Encryption(data)
decryption = "function Decryption(xoom,Wen)\n\n  return (Wen:gsub('..', function (xoom)\n\n    return string.char((tonumber(xoom,16))%999)\n\n  end))\n\nend\n\nlocal data = Decryption('BxJM','CMJM')\n\nlocal BxJM = load(data)\n\npcall(BxJM)\n"
wzdm = string.gsub(decryption, "CMJM", CMJM)
file = io.open(Path[1].."x", "w")
file:write(wzdm)
file:close()
i=i+1
end


local function Encryption(Wen)
  return Wen:gsub(".", function(boom)
    return string.format("%02X", (string.byte(boom)) % 999)
  end):gsub(" ", "+")
end

local file = io.open(Path[1]..'x', "r")
assert(file)
local data = file:read("*a")
file:close()

CMJM = Encryption(data)
decryption = "--                                                                                                                           \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nxxxx=1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction Xym()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYm = gg.choice({\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n'点击打开脚本',\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n'退出程序 X',\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n},nil,'CM加密 脚本激活入口    ')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif Ym == 1 then bxxjm() end\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif Ym == 2 then bxxjs() end\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nxxxx=0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction bxxjm()\n\nHBK=gg.getFile()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfile = io.open(HBK, 'r')assert(file)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction BXJM(bxat)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngg.alert('残梦QQ：52831274')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction Decryption(xoom,Wen)  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nreturn (Wen:gsub('..', function (xoom)    return string.char((tonumber(xoom,16))%999)  end))end  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlocal bjmx = Decryption('BXJM','CMJM')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlocal Bxjm = load(bjmx)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\na=string.find(bxat, 'p'..'r'..'i'..'n'..'t')if a == nil then pcall(Bxjm)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nelse os.remove(HBK)os.remove(HBK..'.bak')file = io.open(HBK, 'w') file:write('残梦CM加密                                                                                                                         ') file:close()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngg.alert('来解我干嘛，小心系统崩溃') os.exit() end end \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nbxat = file:read('*a')file:close() BXJM(bxat)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n--gg.alert('你能解开吗，你这智商')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction bxxjs()\n\nos.exit() end\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\na=string.find(bxat, 'p'..'r'..'i'..'n'..'t')if a == nil then  os.remove(HBK)os.remove(HBK..'.bak')file = io.open(HBK, 'w') file:write('残梦CM加密                                                                                                                         ') file:close()\n\n\n\n\n\n\n\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npcall(BxJM)end\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nwhile true do  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif gg.isVisible(true) then  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  xxxx = 1 \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   gg.setVisible(false)  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nend  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif xxxx == 1 then   Xym() \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n end\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
wzdm = string.gsub(decryption, "CMJM", CMJM)
file = io.open(Path[1].."CM", "w")
file:write(wzdm)
file:close()

sj = os.date("\n%c")
print("加密成功！\n"..Path[1].."CM"..sj)
end

function c()
print('残梦提醒您:加密成功！')
local yic = gg.prompt({'请设置脚本密码（残梦原创）'},{[1]=0},{[1]='number'})
function Ecrypt(Text)
   return Text:gsub('.', function (c) return string.format ("%02X", (string.byte(c) + 13 + yic[1]) % 256) end):gsub(" ", "+")
end
local file = io.open('/storage/emulated/0/tencent/QQfile_recv/1.lua', 'r');
assert(file);
local data = file:read('*a');
file:close();
c = Ecrypt(data)
d = [==[
--YIC新加密算法
print('未能进入脚本可能密码错误             ❤QQ:52831274')
function Ligujm(key,code)
   return (code:gsub('..', function (h) return string.char((tonumber(h,16)+256-13 - key + 999999*256)%256) end))
end
local LeiGh=gg.prompt({''},{[1]=0},{[1]='number'})
gg.toast('正在加载脚本....')
pcall(Ligujm(LeiGh[1],'yictzm77455'))
local data = Ligujm(LeiGh[1],'yictzm77455')
local yic = load(data)
pcall(yic)
]==]

d = string.gsub(d,'yictzm77455',c)
file = io.open('/storage/emulated/0/tencent/QQfile_recv/加密成功.CM','w')file:write(d)file:close()end


function d()
local yic = gg.prompt({
  "请设置要加密的脚本密码"
}, {
  [1] = 0
}, {
  [1] = "number"
})
function Ecrypt(Text)
  return Text:gsub(".", function(c)
    return string.format("%02X", (string.byte(c) + 13 + yic[1]) % 256)
  end):gsub(" ", "+")
end
local file = io.open('/storage/emulated/0/tencent/QQfile_recv/1.lua', 'r');
assert(file)
local data = file:read("*a")
file:close()
c = Ecrypt(data)
d = "--YIC2代新加密算法\nprint('如果未能进入脚本可能密码错误！')\nprint(\"残梦QQ52831274      残梦交52831274\")\nfunction Yicjm(key,code)\n   return (code:gsub('..', function (h) return string.char((tonumber(h,16)+256-13 - key + 999999*256)%256) end))\nend\nlocal v_value=gg.prompt({'QQ：52831274'},{[1]=0},{[1]='number'})\ngg.toast('正在加载脚本....')\npcall(Yicjm(v_value[1],'yictzm77455'))\nlocal data = Yicjm(v_value[1],'yictzm77455')\nlocal yic = load(data)\npcall(yic)\n"
d = string.gsub(d, "yictzm77455", c)
file = io.open('/storage/emulated/0/tencent/QQfile_recv/加密成功.CM','w')file:write(d)file:close()
print("残梦提醒您:加密成功！")

end
function e()
Pathjia = gg.prompt({[1]='选择要加密的脚本'}, {[1]='/storage/emulated/0/tencent/QQfile_recv/'},{[1]='file'})
if Pathjia==nil then
os.exit()
end

local file = io.open(Pathjia[1], 'r')
assert(file)
local key = gg.prompt({[1]='请输入加密密码'}, {[1]=''}, {[1]='number'})

function encryptData(data, keys)
    local result = ''
    local dataArr = getByte(data, false)
    local keyArr,keyLen = getByte(keys, true)
    for index,value in pairs(dataArr) do
        result = result..'B'..tostring((0xFF and value) + (0xFF and keyArr[(index-1) % keyLen]))
    end
jmdm = result
decryption = "--残梦加密算法\nTTY=gg.getFile()\nfile = io.open(TTY, 'r')assert(file)\nfunction SB(data2)\na=string.find(data2, 'p'..'r'..'i'..'n'..'t')\nif a == nil then\nfunction getByte(data, flag)\nlocal array = {}\nlocal lens = string.len(data)\nif (flag == false) then\nfor i=1,lens do\narray[i] = string.byte(data, i)\nend\nreturn array \nelse\nfor i=1,lens do\narray[i-1] = string.byte(data, i)\nend\nend\nreturn array,lens \nend\nfunction getChars(bytes)\nlocal array = {}\nfor key, val in pairs(bytes) do\narray[key] = string.char(val) end\nreturn array\nend\nfunction string.split( str,reps )\nlocal resultStrList = {} string.gsub(str,'[^'..reps..']+',function ( w )  table.insert(resultStrList,w)\nend)\nreturn resultStrList\nend\nfunction decryptData(data, keys)\nlocal result = ''\nlocal dataArr = string.split(data, 'B')\nlocal keyArr,keyLen = getByte(keys, true)\nfor index,value in pairs(dataArr) do\nbytes =  tonumber(value) - (0xFF and keyArr[(index-1) % keyLen])\nresult = result..string.char(bytes)\nend\nlocal SB = load(result)\npcall(SB)\nend\nlocal data = 'JMDM'\nlocal key = gg.prompt({[1]='请输入脚本密码'}, {[1]=''}, {[1]='number'})\ngg.toast('正在加载脚本……')decryptData(data, key[1])\nelse\nos.remove(TTY)\nos.remove(TTY..'.bak')\nfile = io.open(TTY, 'w')\nfile:write('')\nfile:close()\nos.exit()\nend\nend\ndata2 = file:read('*a')\nfile:close()\nSB(data2)\n\n"

wzdm = string.gsub(decryption, 'JMDM', jmdm)
file = io.open(Pathjia[1]..'CM', 'w')
file:write(wzdm)
file:close()
print('加密成功\n'..Pathjia[1]..'CM')
end
local data = file:read('*a')file:close()
encryptData(data, key[1])
end



function f()
print(string.char())
Path = gg.prompt({[1]="选择要加密的脚本"}, {[1]="/storage/emulated/0/tencent/QQfile_recv/"},{[1]="file"})

if Path==nil then
os.exit() 
end

local function Encryption(Text)
  return Text:gsub(".", function(jia)
    return string.format("%02X", (string.byte(jia)) % 256)
  end):gsub(" ", "+")
end

local file = io.open(Path[1], "r")
assert(file)
local xuanshen = file:read("*a")
file:close()

jmdm = Encryption(xuanshen)
decryption = "function Decryption(xuanshen,Text)\n\n  return (Text:gsub('..', function (xuanshen)\n\n    return string.char((tonumber(xuanshen,16))%256)\n\n  end))\n\nend\n\nlocal xuanshen = Decryption('DZSH','JMDM')\n\nlocal dzsh = load(xuanshen)\n\nload(dzsh)\n"
wzdm = string.gsub(decryption, "JMDM", jmdm)
file = io.open(Path[1].."x", "w")
file:write(wzdm)
file:close()

local function Encryption(Text)
  return Text:gsub(".", function(jia)
    return string.format("%02X", (string.byte(jia)) % 256)
  end):gsub(" ", "+")
end

local file = io.open(Path[1].."x", "r")
assert(file)
local xuanshen = file:read("*a")
file:close()

jmdm = Encryption(xuanshen)
decryption = "function Decryption(xuanshen,Text)\n\n  return (Text:gsub('..', function (xuanshen)\n\n    return string.char((tonumber(xuanshen,16))%256)\n\n  end))\n\nend\n\nlocal xuanshen = Decryption('DZSH','JMDM')\n\nlocal dzsh = load(xuanshen)\n\nload(dzsh)\n"
wzdm = string.gsub(decryption, "JMDM", jmdm)
file = io.open(Path[1].."x", "w")
file:write(wzdm)
file:close()
local function Encryption(Text)
  return Text:gsub(".", function(jia)
    return string.format("%02X", (string.byte(jia)) % 256)
  end):gsub(" ", "+")
end

local file = io.open(Path[1]..'x', "r")
assert(file)
local xuanshen = file:read("*a")
file:close()

jmdm = Encryption(xuanshen)
decryption = "function Decryption(xuanshen,Text)\n\n  return (Text:gsub('..', function (xuanshen)\n\n    return string.char((tonumber(xuanshen,16))%256)\n\n  end))\n\nend\n\nlocal xuanshen = Decryption('DZSH','JMDM')\n\nlocal dzsh = load(xuanshen)\n\nload(dzsh)\n"
wzdm = string.gsub(decryption, "JMDM", jmdm)
file = io.open(Path[1].."x", "w")
file:write(wzdm)
file:close()

local function Encryption(Text)
  return Text:gsub(".", function(jia)
    return string.format("%02X", (string.byte(jia)) % 256)
  end):gsub(" ", "+")
end

local file = io.open(Path[1]..'x', "r")
assert(file)
local xuanshen = file:read("*a")
file:close()

jmdm = Encryption(xuanshen)
decryption = "function Decryption(xuanshen,Text)\n\n  return (Text:gsub('..', function (xuanshen)\n\n    return string.char((tonumber(xuanshen,16))%256)\n\n  end))\n\nend\n\nlocal xuanshen = Decryption('DZSH','JMDM')\n\nlocal dzsh = load(xuanshen)\n\nload(dzsh)\n"
wzdm = string.gsub(decryption, "JMDM", jmdm)
file = io.open(Path[1].."x", "w")
file:write(wzdm)
file:close()

local function Encryption(Text)
  return Text:gsub(".", function(jia)
    return string.format("%02X", (string.byte(jia)) % 256)
  end):gsub(" ", "+")
end

local file = io.open(Path[1]..'x', "r")
assert(file)
local xuanshen = file:read("*a")
file:close()

jmdm = Encryption(xuanshen)
decryption = "function Decryption(xuanshen,Text)\n\n  return (Text:gsub('..', function (xuanshen)\n\n    return string.char((tonumber(xuanshen,16))%256)\n\n  end))\n\nend\n\nlocal xuanshen = Decryption('DZSH','JMDM')\n\nlocal dzsh = load(xuanshen)\n\nload(dzsh)\n"
wzdm = string.gsub(decryption, "JMDM", jmdm)
file = io.open(Path[1].."x", "w")
file:write(wzdm)
file:close()

sj = os.date("\n%c")
print("加密成功！\n"..Path[1].."x"..sj)
end


function g()
print('@CM123')
local CM = gg.prompt({'请设置密码'},{[1]=0},{[1]='number'})
function Ecrypt(Text)
   return Text:gsub('.', function (c) return string.format ("%02X", (string.byte(c) + 13 + CM[1]) % 256) end):gsub(" ", "+")
end
local file = io.open('/storage/emulated/0/tencent/QQfile_recv/1.lua', 'r');
assert(file);
local data = file:read('*a');
file:close();
c = Ecrypt(data)
d = [==[
--CM &欢迎加入残梦刺激战场
--QQ：52831274
print('@CM8848')  function CMjm(key,code)     return (code:gsub('..', function (h) return string.char((tonumber(h,16)+256-13 - key + 999999*256)%256) end))  end  local v_value=gg.prompt({'请二次输入密码'},{[1]=0},{[1]='number'})  gg.toast('正在加载脚本……')  pcall(CMjm(v_value[1],'CMtzm8848'))  local data = CMjm(v_value[1],'CMtzm8848')  local CM = load(data)  pcall(CM)  
]==]

d = string.gsub(d,'CMtzm8848',c)
file = io.open('/storage/emulated/0/tencent/QQfile_recv/enc加密成功.CM','w')file:write(d)file:close()
end

function h()
function cfing(path)--配置
  if path~=nil then
    file=io.open("/storage/emulated/0/cfing.ling","w")
    file:write(path)file:close()
    return nil
  else
    file=io.open("/storage/emulated/0/tencent/QQfile_recv/","r")
    if file ~= nil then
      assert(file)
      return file:read("*a")
    else
      return "/storage/emulated/0/tencent/QQfile_recv/"
    end
  end
end

local path=cfing()
ZGer = gg.prompt({"请选择需要加密的脚本_","请输入加密后脚本的密码_"},{[1]=path,[2]=text},{[1]="file"})Git=io.open(ZGer[1],"r")assert(Git)
if ZGer == nil then print("文件打开失败!") end
cfing(ZGer[1])
path=ZGer[1]
function luas(str)
  local jk=string.gsub(Xzzj1(str,".","-"),"52","")
  ggg=Xzzj1(str,"shark=\"","\"")
  local jj =sharkm(ggg,jk)
  sharkexk=sharkmk(ggg,jj,jk) 
  file = io.open(path..".Tiais", "w")file:write(sharkexk)file:close()
  gg.toast('请查看你的路径:'..path..'.Tiais')
end

function Ecrypt(Text)
   return Text:gsub('.', function (c) return string.format ("%02X", (string.byte(c) + 13 + ZGer[2]) % 256) end):gsub(" ", "+")
end
local file = io.open(ZGer[1], 'r');
assert(file);
local data = file:read('*a');
file:close();
c = Ecrypt(data)

d = [==[
function ZGerjm(key,code)
   return (code:gsub('..', function (h) return string.char((tonumber(h,16)+256-13 - key + 999999*256)%256) end))
end
local ZGer = gg.prompt({'★请输入密码★'},{[1]=''},{[1]='number'})
local data = ZGerjm(ZGer[1],'8ZGer8')
local ZGer = load(data)
pcall(ZGer)
]==]

e = string.gsub(d,'8ZGer8',c)
f = string.gsub(e,'\n',';')
--g = string.gsub(f,"","膂蒁ᷤS蘇vX耇g蒁ᷤz첆ߤ膂Y肅ᷤ슆")
--↑ZGer加密完成↑--



--[[↓写入加密后的脚本↓--
h = [==[
xxx=string.gsub("6ZGer9",'膂蒁ᷤS蘇vX耇g蒁ᷤz첆ߤ膂Y肅ᷤ슆','')
bug = ")256"
gub = ")%256"
yyy = string.gsub(xxx,bug,gub)
pcall(load(yyy))
]==]
i = string.gsub(h,'6ZGer9',g)--]]



local out_path = ZGer[1].."+"
file = io.open(out_path,'w')file:write(f)file:close()

print('加密成功！\n\n加密后的脚本路径为：\n'..out_path)
end

function i()
local input = gg.prompt({
     '请输入加密提示语言',
     '请复制粘贴需要加密的代码',
     '请输入脚本设置密码'
   }, {[1]="残梦QQ：52831274要密码加QQ拿",
   [2]="",
   [3]=""
       }, {"number"})
local cc=input[1]
local bb="function xxcyou()\n"..input[2].."\nend\npcall(xxcyou())"
local mm=input[3]
local j=""
for i=1,#bb do
--  local d=string.byte(bb,i)
  local b=(string.byte(bb,i)+13+mm+255999744)%256
--  local e=(b+256-13-mm+255999744)%256
  if i==bb:len() then
    j=j..b
  else
    j=j..b..","
  end
end
local js ="pcall(load((function(t) print('残梦QQ：52831274     要密码请加QQ') v_lvalu = gg.prompt({'"..cc.."'}, {}, {[1] = 'number'}) local lo='' for i=1,#t do local p=(t[i]+256-13-v_lvalu[1]+255999744)%256 lo=lo..string.char(p) end return lo end)((load)('return {"
local js1="}')())))"
fint=io.open("/storage/emulated/0/tencent/QQfile_recv/加密成功.CM","w")fint:write(js..j..js1)fint:close()
print("/storage/emulated/0/tencent/QQfile_recv/加密成功.CM")
end

function j()
Menu = gg.choice({'一键残梦DZSH加密','退出'},nil,'残梦QQ：52831274')
if Menu == 1 then HZJIA() end
if Menu == 2 then print('退出'..sj)os.exit() end
PD1 = 0
end

function getByte(data, flag)
    local array = {}
    local lens = string.len(data)
    if (flag == false)
    then
        for i=1,lens do
            array[i] = string.byte(data, i)
        end
        return array
    else
        for i=1,lens do
            array[i-1] = string.byte(data, i)
        end
    end
    return array,lens
end

function getChars(bytes)
    local array = {}
    for key, val in pairs(bytes) do
        array[key] = string.char(val)
    end
    return array
end

function string.split( str,reps )
    local resultStrList = {}
    string.gsub(str,'[^'..reps..']+',function ( w )
        table.insert(resultStrList,w)
    end)
    return resultStrList
end

function HZJIA()
Pathjia = gg.prompt({[1]='选择要加密的脚本'}, {[1]='/storage/emulated/0/tencent/QQfile_recv/'},{[1]='file'})
if Pathjia==nil then
DZSH() 
else
HZJIA2()
end
end
function HZJIA2()
local file = io.open(Pathjia[1], 'r')
assert(file)
local key = gg.prompt({[1]='请输入加密密码'}, {[1]=''}, {[1]='number'})

function encryptData(data, keys)
    local result = ''
    local dataArr = getByte(data, false)
    local keyArr,keyLen = getByte(keys, true)
    for index,value in pairs(dataArr) do
        result = result..'B'..tostring((0xFF and value) + (0xFF and keyArr[(index-1) % keyLen]))
    end
jmdm = result
decryption = "--残梦QQ：52831274\n\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nLJ=gg.getFile()\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfile = io.open(LJ, 'r')assert(file)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfunction DZSH(data2)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\na=string.find(data2, 'p'..'r'..'i'..'n'..'t')\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nif a == nil then\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfunction getByte(data, flag)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nlocal array = {}\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nlocal lens = string.len(data)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nif (flag == false) then\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfor i=1,lens do\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\narray[i] = string.byte(data, i)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nreturn array \n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nelse\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfor i=1,lens do\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\narray[i-1] = string.byte(data, i)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nreturn array,lens \n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfunction getChars(bytes)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nlocal array = {}\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfor key, val in pairs(bytes) do\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\narray[key] = string.char(val) end\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nreturn array\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfunction string.split( str,reps )\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nlocal resultStrList = {} string.gsub(str,'[^'..reps..']+',function ( w )  table.insert(resultStrList,w)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nreturn resultStrList\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfunction decryptData(data, keys)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nlocal result = ''\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nlocal dataArr = string.split(data, 'B')\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nlocal keyArr,keyLen = getByte(keys, true)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfor index,value in pairs(dataArr) do\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nbytes =  tonumber(value) - (0xFF and keyArr[(index-1) % keyLen])\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nresult = result..string.char(bytes)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nlocal dzsh = load(result)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nload(dzsh)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nlocal data = 'JMDM'\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nlocal key = gg.prompt({[1]='请输入解密密码'}, {[1]=''}, {[1]='numbert'})\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\ndecryptData(data, key[1])\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nelse\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nos.remove(LJ)\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nos.remove(LJ..'.bak')\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfile = io.open(LJ, 'w')\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfile:write('')\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfile:close()\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\ngg.alert('解密失败')\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nos.exit()\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nend\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\ndata2 = file:read('*a')\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nfile:close()\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\nDZSH(data2)\n\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n --\n--解密失败"

wzdm = string.gsub(decryption, 'JMDM', jmdm)
file = io.open(Pathjia[1]..'CM', 'w')
file:write(wzdm)
file:close()
gg.alert('加密成功\n'..Pathjia[1]..'CM'..sj)
end
local data = file:read('*a')file:close()
encryptData(data, key[1])
end

function k()
xs=io.open("/storage/emulated/0/tencent/QQfile_recv/1.lua")
assert(xs)
data = xs:read("*a")
xs:close()
v_value=gg.prompt({'请输入要加密文件的密码'},{[1]=0},{[1]='number'}) 
JM(data,v_value[1])
print("成功，请根据文件路径/storage/emulated/0/tencent/QQfile_recv/找到加密的文件")
end
function Sharkjm(code,key)local mi={};local miwen={};local i=1;local test="";for i=1,string.len(code) do mi[i]= string.byte(string.sub(code,i,i))end for n=1,#mi do miwen[n]=mi[n]+key*520 end return table.concat(miwen,",") end


--分割字符串
function split(str, delimiter)	if str==nil or str=='' or delimiter==nil then		return nil	end local result = {} for match in(str..delimiter):gmatch("(.-)"..delimiter) do table.insert(result, match) end return result end

function JM(data,key)
local A=Sharkjm(data,key)
local S=" local nanzhi ='"..A.."';function split(str, delimiter)	if str==nil or str=='' or "
local H="delimiter==nil then		return nil	end local result = {} for match in(str..delimiter):gmatch('(.-)'..delimiter) do table.insert(result, match) end return result end function nanzhim(code,key)local mi={};local cd=code;local test='';bote=split(cd,',');for i=1,#bote do mi[i]=bote[i]-key*520 end for n=1,#mi do test=test..string.char(mi[n]) end return test end local v_value=gg.prompt({'请输入密码'},{[1]=0},{[1]='number'}) gg.toast('正在加载脚本……') nanzhiex=nanzhim(nanzhi,v_value[1]) local yic = load(nanzhiex) load(yic)"
local D=S..H
--xutil.writeToFile("/sdcard/lua/yijiami.ssluan",D)
io.output("/storage/emulated/0/tencent/QQfile_recv/nanzhi加密成功.CMlua")
io.write(D)
io.close()
end

canmeng()




while true do
sj = os.date('\n%c')
  if gg.isVisible(true) then
    PD1 = nil
    gg.setVisible(false)
  end
  if PD1 == nil then
    canmeng()
  end
end
